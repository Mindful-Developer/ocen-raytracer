import std::vec::{ Vec3f, Vec2f }
import std::image::{ Image }
import @utils::utils::get_interpolated


enum Texture {
    Color(color: Vec3f)
    Image(img: &Image)
    ImageScaled(img: &Image, brightness: f32)
    Checkerboard(scale: f32)
}


def Texture::get(this, uv: Vec2f): Vec3f {
    return match this {
        Color(c) => c
        ImageScaled(img, brightness) => get_interpolated(img, uv.x, 1.0 - uv.y) * brightness
        Image(img) => get_interpolated(img, uv.x, 1.0 - uv.y)
        Checkerboard(s) => {
            let res = (uv * s).to_u32()
            yield if (res.x + res.y) % 2 == 0 then Vec3f(0.0, 0.0, 0.0) else Vec3f(1.0, 1.0, 1.0)
        }
    }
}